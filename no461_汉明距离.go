package main

//两个整数之间的汉明距离指的是这两个数字对应二进制位不同的位置的数目。
//给出两个整数 x 和 y，计算它们之间的汉明距离。
//注意：
//0 ≤ x, y < 231.
//示例:
//输入: x = 1, y = 4
//输出: 2
//解释:
//1   (0 0 0 1)
//4   (0 1 0 0)
//↑   ↑
//上面的箭头指出了对应二进制位不同的位置。



//两数异或，结果的二进制，同位不同是1
//每次右移一位，每次判断与1的&，相当于判断最右一位是不是1，并计数
func hammingDistance(x int, y int) int {
	n := x^y
	cnt := 0
	for n != 0 {
		if n &1 == 1 {
			cnt++
		}
		n >>= 1
	}

	return cnt
}